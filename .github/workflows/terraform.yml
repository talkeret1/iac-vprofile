name: "Vprofile IAC"
on:     # When to Run the Execution
    push:
        branches:
            - main
            - stage
        paths:
            - terraform/**
    pull_request:
        branches:
            - main
        pathes:
            - terraform/**

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
    AWS_REGION: us-east-1
    EKS_CLUSTER: vprofile-eksx

jobs:
    terraform:              # We Give an Attribute Name for the Job.
        name: "Apply Terraform Code Changes"
        runs-on: ubuntu-latest    # Run A Container with Ubuntu Image.
        defaults:
            run:
                shell: bash
                working-directory: ./terraform   # Excute Job on This Path.
        steps:
            - name: "Checkout Source Code"
              uses: actions/checkout@v4   # Checkout Action from Github Marketplace Actions.
              
            - name: "Setup Terraform with Specified Version on the Runner"
              uses: hashicorp/setup-terraform@v2 # HashiCorp - Setup Terraform Terraform from Github Marketplace Actions.
            #   with:
            #     terraform_version: 1.6.3

            - name: "Terraform Init"
              id: init
              run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
            
            - name: "Terraform Format"
              id: fmt
              run: terraform fmt -check 
              # Check without Changes, If the Format is not Correct,
              # It will return a Non-Zero Code, And the Workflow will Fail.   

            - name: "Terraform Validate"
              id: validate
              run: terraform validate
            
            - name: "Terraform Plan"
              id: plan
              run: terraform plan -no-color -input=false -out planfile
              continue-on-error: true

            # - name: "Terraform Plan Status"
            #   if: steps.plan.outcome == 'failure'
            #   run: exit 1
              
            - name: "Terraform Destroy"
              id: destroy
              run: terraform destroy -auto-approve
            
            - name: "Terraform Apply"
              id: apple
              if: github.ref == 'refs/heads/main' && github.event_name == 'push' #  Only Changes on the Main Branch will Apply
              run: terraform apply -auto-approve -input=false -parallelism=1 planfile

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
               aws-region: ${{ env.AWS_REGION }}
     
            - name: Get Kube Config File
              id: getconfig
              if: steps.apple.outcome == 'success' #  Only Changes on the Main Branch will Apply
              run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }} 

            - name: Install Ingress controller
              if: steps.apple.outcome == 'success' && steps.getconfig.outcome == 'success'      #  Only Changes on the Main Branch will Apply
              run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml